#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
DOCS_DIR="$ROOT_DIR/docs"
OUTPUT_FILE="$ROOT_DIR/DOCUMENTATION.md"

# Ensure docs directory exists
[[ -d "$DOCS_DIR" ]] || { echo "❌ Directory '$DOCS_DIR' not found."; exit 1; }

# Recreate output file from scratch
: > "$OUTPUT_FILE"

echo "<!-- Autogenerated Documentation, do not edit manually: $(date) -->" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"

# Recursive function to aggregate markdown files
process_dir() {
    local dir="$1"
    for path in "$dir"/*; do
        [[ -e "$path" ]] || continue
        local base="$(basename "$path")"

        # Skip hidden and "_" prefixed items
        [[ "$base" == _* || "$base" == .* ]] && continue

        if [[ -d "$path" ]]; then
            process_dir "$path"
        elif [[ "$path" == *.md ]]; then
            echo ">>> Adding $path"
            {
                echo ""
                echo "---"
                echo ""
                cat "$path"
                echo ""
            } >> "$OUTPUT_FILE"
        fi
    done
}

# Start with README if present
if [[ -f "$DOCS_DIR/README.md" ]]; then
    echo ">>> Adding $DOCS_DIR/README.md"
    cat "$DOCS_DIR/README.md" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
    echo "---" >> "$OUTPUT_FILE"
    echo "" >> "$OUTPUT_FILE"
fi

# Process the rest
process_dir "$DOCS_DIR"

echo "✅ Aggregated documentation written to $OUTPUT_FILE"

